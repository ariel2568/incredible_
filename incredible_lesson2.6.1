class Human:
    def __init__(self, id_number, name, age, priority, blood_type):
        self.id_number = id_number
        self.name = name
        self.age = age
        self.priority = priority
        self.blood_type = blood_type
        self.family = [] 

    def add_family_member(self, person):
        if person not in self.family:
            self.family.append(person)
            person.family.append(self)


class Queue:
    def __init__(self):
        self.humans = []

    def add_person(self, person):
        if person.age > 60 or person.priority:
            self.humans = [person] + self.humans  
        else:
            self.humans.append(person) 
            
    def find_in_queue(self, person):
        for i in range(len(self.humans)):
            if self.humans[i] == person:
                return i
        return -1  

    def swap(self, person1, person2):
        index1 = self.find_in_queue(person1)
        index2 = self.find_in_queue(person2)
        if index1 != -1 and index2 != -1:
            self.humans[index1], self.humans[index2] = self.humans[index2], self.humans[index1]

    def get_next(self):
        if len(self.humans) == 0:
            return None
        next_person = self.humans[0]
        self.humans = self.humans[1:] 
        return next_person

    def get_next_blood_type(self, blood_type):
        for i in range(len(self.humans)):
            if self.humans[i].blood_type == blood_type:
                person = self.humans[i]
                self.humans = self.humans[:i] + self.humans[i+1:]  
                return person
        return None

    def sort_by_age(self):
        priority_people = []
        older_people = []
        younger_people = []
        
        for person in self.humans:
            if person.priority:
                priority_people.append(person)
            elif person.age > 60:
                older_people.append(person)
            else:
                younger_people.append(person)
        
        self.humans = priority_people + older_people + younger_people

    def rearrange_queue(self):
        if len(self.humans) < 2:
            return
        new_queue = [self.humans[0]]
        for i in range(1, len(self.humans)):
            if self.humans[i].family and self.humans[i-1] in self.humans[i].family:
                # Trouver un autre emplacement
                for j in range(i+1, len(self.humans)):
                    if self.humans[j] not in self.humans[i].family:
                        self.humans[i], self.humans[j] = self.humans[j], self.humans[i]
                        break
            new_queue.append(self.humans[i])
        self.humans = new_queue
