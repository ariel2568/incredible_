#exercice 1 

class Currency:
    def __init__(self, currency, amount):
        self.currency = currency
        self.amount = amount

    def __str__(self):
        if self.amount == 1:
            return f"{self.amount} {self.currency}"
        else:
            return f"{self.amount} {self.currency}s"  

    def __repr__(self):
        return self.__str__()  

    def __int__(self):
        return self.amount 
        
    def __add__(self, other):
        if isinstance(other, int):
            return self.amount + other 
        if isinstance(other, Currency):
            if self.currency != other.currency:
                raise TypeError(f"Cannot add between Currency type <{self.currency}> and <{other.currency}>")
            return self.amount + other.amount  
        return NotImplemented

    def __iadd__(self, other):
        if isinstance(other, int):
            self.amount += other  
        elif isinstance(other, Currency):
            if self.currency != other.currency:
                raise TypeError(f"Cannot add between Currency type <{self.currency}> and <{other.currency}>")
            self.amount += other.amount 
        else:
            raise TypeError("Invalid type for addition.")
        return self  



#exercuce 2 

#func.py

def sum_numbers(a, b):
    print(f"The sum is: {a + b}")

#exercise_one.py
import func
func.sum_numbers(3, 4)


#exercice 3 

import string
import random

def generate_random_string(length=5):
    letters = string.ascii_letters 
    random_string = ''.join(random.choice(letters) for _ in range(length))
    return random_string

print(generate_random_string())


#exercice 4

from datetime import datetime

def display_current_date():
    current_date = datetime.now()
    print(f"Current date is: {current_date}")

display_current_date()


#exercice 5 
from datetime import datetime

def time_until_new_year():
    now = datetime.now()
    next_year = datetime(year=now.year + 1, month=1, day=1)
    time_left = next_year - now
    print(f"Time left until January 1st: {time_left}")

time_until_new_year()


#exercice 6 

from datetime import datetime

def minutes_lived(birthdate):
    birth_date = datetime.strptime(birthdate, "%d/%m/%Y")
    now = datetime.now()
    lived_time = now - birth_date
    minutes = lived_time.total_seconds() // 60
    print(f"You have lived {int(minutes)} minutes.")


#exercice 7 
from faker import Faker

fake = Faker()
users = []

def add_user():
    user = {
        "name": fake.name(),
        "address": fake.address(),
        "language_code": fake.language_code()
    }
    users.append(user)

for _ in range(5): 
    add_user()

print(users)


